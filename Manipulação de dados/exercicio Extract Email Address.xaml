<Activity mc:Ignorable="sap sap2010" x:Class="exercicio_Extract_Email_Address" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="918,1383" sap2010:WorkflowViewState.IdRef="exercicio_Extract_Email_Address_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Sequência usada para extrair o endereço de e-mail sem usar regex.&#xA;Premissas: um único endereço de e-mail é fornecido na frase de entrada (john.doe@localcompany.com) e a validação do endereço de e-mail está fora do escopo do exercício atual)" DisplayName="Extract_Email_Address no RegEx" sap:VirtualizedContainerService.HintSize="928,1318" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="InputData">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="“Please use the following address to contact me john.doe@localcompany.com on the company email&quot;" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="IndexTextToFind">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="-1" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="EmailAddress_Part1" />
      <Variable x:TypeArguments="x:String" Name="EmailAddress_Part2" />
      <Variable x:TypeArguments="x:Int32" Name="TemporaryIndex">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="-1" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="TextToFind" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Inicialize a busca por palavras" sap:VirtualizedContainerService.HintSize="886,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TextToFind]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["@"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Obter @ índice de texto" sap:VirtualizedContainerService.HintSize="886,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[IndexTextToFind]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[InputData.IndexOf("@")]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[IndexTextToFind = -1]" sap:VirtualizedContainerService.HintSize="886,969" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <WriteLine DisplayName="Email não encontrado" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Endereço de e-mail inválido" />
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="611,811" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Extraia todo o texto até @" sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[EmailAddress_Part1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[InputData.Substring(0,IndexTextToFind)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Definir Email Parte 1" sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[EmailAddress_Part1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[EmailAddress_Part1.Substring(EmailAddress_Part1.LastIndexOf(" "))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Extraia todo o texto após @" sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[EmailAddress_Part2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[InputData.Substring(IndexTextToFind +1)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Obtenha o índice de espaço após @" sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[TemporaryIndex]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[EmailAddress_Part2.IndexOf(" ")]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[TemporaryIndex = -1]" DisplayName="Verifique se o índice de espaço foi encontrado para a parte 2 do e-mail" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Assign DisplayName="Extraia todo o texto após @" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[EmailAddress_Part2]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[InputData.Substring(IndexTextToFind + 1 )]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Assign DisplayName="Extraia o texto após @ até o espaço" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[EmailAddress_Part2]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[InputData.Substring(IndexTextToFind + 1, TemporaryIndex )]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <WriteLine DisplayName="Imprime o endereço de e-mail" sap:VirtualizedContainerService.HintSize="569,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[String.Format(&quot;O endereço de e-mail é {0}@{1}&quot;, EmailAddress_Part1, EmailAddress_Part2)]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>